pipeline {
    agent {
        node {
            label 'team:makerspace-small'
        }
    }

    parameters {
        choice(choices: ['test', 'prod'], description: 's3 bucket that the build will target', name: 'BUILD_DEST')
        choice(choices: ['default', 'test', 'prod'], description: 's3 bucket from which tiles are served', name: 'TILE_SOURCE')
        gitParameter(name: 'BRANCH_TAG',
                             type: 'PT_BRANCH_TAG',
                             defaultValue: 'master')
    }
    stages {
        stage('clean workspace'){
         steps{
            cleanWs()
         }
        }
        stage('checkout'){
            steps{
                    checkout([$class: 'GitSCM',
                              branches: [[name: "${params.BRANCH_TAG}"]],
                              doGenerateSubmoduleConfigurations: false,
                              extensions: [],
                              gitTool: 'Default',
                              submoduleCfg: [],
                              userRemoteConfigs: [[url: 'https://github.com/usgs-makerspace/delaware-basin-ui']]
                            ])
                }
        }
        stage('build') {
            steps {
                
                sh """
                    docker build . --tag="delaware-basin-docker" --build-arg BUILDTARGET=${params.BUILD_DEST} --build-arg TILESOURCE=${params.TILE_SOURCE}
                    docker run delaware-basin-docker
                    pathtemplate=":tmp/delaware-basin-app/dist"
                    dockerinstanceid=\$( docker ps -l -q )
                    docker cp  "\${dockerinstanceid}\${pathtemplate}" "$WORKSPACE"
                    docker rm "\${dockerinstanceid}"            
                """

            }
        }
        
        stage('send to S3') {
            steps {
                script {
                    if ("${params.BUILD_DEST}" == "prod") {
                        targetDomain = "s3://delaware-basin-prod-website"
                    }
                    else {
                        targetDomain = "s3://delaware-basin-test-website"
                    }
                }
                sh """
                    aws s3 rm "${targetDomain}" --recursive --exclude "tiles/*" --exclude "basetiles/*" --exclude "geojson/*"
                    aws s3 cp "$WORKSPACE/dist" "${targetDomain}" --recursive
                """
            }
        }
    }
}
